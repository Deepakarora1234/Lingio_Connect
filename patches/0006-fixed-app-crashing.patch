From 623b74e243115151c2f0043e21e74a965e4a6420 Mon Sep 17 00:00:00 2001
From: Deepak Arora <arroadeepak0817@gmail.com>
Date: Thu, 9 May 2024 12:36:38 +0530
Subject: [PATCH 06/16] fixed app crashing

---
 frontend/src/App.jsx                   |   2 +
 frontend/src/components/SearchBar.jsx  | 172 ++++++++++++++
 frontend/src/context/SearchContext.jsx |  32 +++
 frontend/src/main.jsx                  |  61 +++--
 frontend/src/pages/Home.jsx            | 317 ++++++++++++-------------
 frontend/src/pages/Search.jsx          |  11 +
 6 files changed, 397 insertions(+), 198 deletions(-)
 create mode 100644 frontend/src/components/SearchBar.jsx
 create mode 100644 frontend/src/context/SearchContext.jsx
 create mode 100644 frontend/src/pages/Search.jsx

diff --git a/frontend/src/App.jsx b/frontend/src/App.jsx
index 0c93308..08a5986 100644
--- a/frontend/src/App.jsx
+++ b/frontend/src/App.jsx
@@ -9,6 +9,7 @@ import { useAuth0 } from "@auth0/auth0-react";
 import Home from './pages/Home'
 import NavbarMenu from './components/NavbarMenu'
 import AddTutor from "./pages/AddTutor"
+import Search from './pages/Search'
 
 
 function App() {
@@ -21,6 +22,7 @@ function App() {
       <Route path='/' element={!isAuthenticated ? <Welcome /> : <Home />} />
       <Route path = '/sidebar' element={<NavbarMenu />}></Route>
        <Route path='/AddTutor' element= {<AddTutor />} />
+       <Route path='/search' element= {<Search />} />
      
       </Routes>
     </Router>
diff --git a/frontend/src/components/SearchBar.jsx b/frontend/src/components/SearchBar.jsx
new file mode 100644
index 0000000..a90e102
--- /dev/null
+++ b/frontend/src/components/SearchBar.jsx
@@ -0,0 +1,172 @@
+import {React, useState} from 'react'
+import Select from "react-select";
+import Range from "rc-slider/lib/Slider";
+import { useSearchContext } from '../context/SearchContext';
+import { useNavigate } from 'react-router-dom';
+
+const SearchBar = () => {
+  const search = useSearchContext()
+  const navigate = useNavigate()
+
+  const options = [
+    { value: "English", label: "English" },
+    { value: "German", label: "German" },
+    { value: "Russian", label: "Russian" },
+    { value: "Korean", label: "Korean" },
+    { value: "Japanese", label: "Japanese" },
+    { value: "Spanish", label: "Spanish" },
+    { value: "French", label: "French" },
+  ];
+
+  const Priceoptions = [
+    { value: 'below_2000', label: 'Below 2000' },
+    { value: '2000_5000', label: '2000 - 5000' },
+    { value: '5000_10000', label: '5000 - 10000' },
+    { value: '10000_above', label: '10000 and above' },
+  ];
+  const Durationoptions = [
+    { value: 'below_4', label: 'less than 4 weeks' },
+    { value: '4_6', label: '4 - 6 weeks' },
+    { value: '6_above', label: 'more than 6 weeks' },
+  ];
+  
+
+
+  const [selectedOption, setSelectedOption] = useState(null);
+  const [selectedPrice, setSelectedPrice] = useState(null);
+  const [selectedDuration, setSelectedDuration] = useState(null);
+
+
+
+  const handleSelectChange = (selectedOption) => {
+    setSelectedOption(selectedOption);
+    console.log(selectedOption);
+  };
+  const handleSelectChangePrice = (selectedPrice) => {
+
+    setSelectedPrice(selectedPrice);
+    console.log(selectedPrice)
+  };
+  const handleSelectChangeDuration = (selectedDuration) => {
+
+    setSelectedDuration(selectedDuration);
+    console.log(selectedDuration)
+  };
+
+  const handleSubmit = (event)=>{
+      event.preventDefault()
+
+      search.saveSearchValues(
+        selectedOption,
+        selectedPrice,
+        selectedDuration
+      )
+      
+      navigate("/search")
+      
+  }
+
+  const customStyles = {
+    control: (provided) => ({
+      ...provided,
+      borderRadius: "0.375rem",
+      borderColor: "#004250",
+      "&:hover": {
+        borderColor: "#004250",
+      },
+      boxShadow: "none",
+      backgroundColor: "black",
+      //   paddingLeft:'20px',
+      //   paddingRight:'20px',
+      gap: "100px",
+      color: "white",
+      fontWeight: "",
+      fontSize: "1.2rem",
+      display: "flex",
+      justifyContent: "space-between",
+    }),
+    menu: (provided) => ({
+      ...provided,
+
+      marginTop: "0.5rem",
+      borderRadius: "0.375rem",
+      boxShadow:
+        "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
+      backgroundColor: "",
+      color: "white",
+    }),
+    placeholder: (provided) => ({
+      ...provided,
+      paddingLeft: "2px",
+      //   paddingRight:'20px',
+      color: "white",
+    }),
+    singleValue: (provided) => ({
+      ...provided,
+
+      color: "white",
+    }),
+    input: (provided) => ({
+      ...provided,
+      color: "white",
+    }),
+
+    option: (provided) => ({
+      ...provided,
+      backgroundColor: "black",
+      color: "white",
+      "&:hover": {
+        backgroundColor: "black",
+      },
+    }),
+  };
+  return (
+    <div className="grid grid-cols-1 min-[604px]:grid-cols-2 p-3  text-white mt-3">
+    <div className="">
+      <Select
+        className=" text-white p-3"
+        options={options}
+        value={selectedOption}
+        onChange={handleSelectChange}
+        placeholder="English"
+        isSearchable
+        styles={customStyles}
+      />
+    </div>
+     
+      <div className=''>
+        <Select 
+        className=' text-white p-3'
+        options={Priceoptions}
+        value={selectedPrice}
+        onChange={handleSelectChangePrice}
+        placeholder="Price Range"
+        isSearchable
+        styles={customStyles}
+       />
+        </div>
+
+
+  <div className=''>
+        <Select 
+        className=' text-white p-3'
+        options={Durationoptions}
+        value={selectedDuration}
+        onChange={handleSelectChangeDuration}
+        placeholder="Course Duration"
+        isSearchable
+        styles={customStyles}
+       />
+        </div>
+        <button type='submit' onSubmit={handleSubmit} className="border rounded  bg-cyan-950 text-xl p-2 m-3">
+          Search
+        </button>
+        
+      
+    
+  </div>
+
+  )
+}
+
+export default SearchBar
diff --git a/frontend/src/context/SearchContext.jsx b/frontend/src/context/SearchContext.jsx
new file mode 100644
index 0000000..0e49cb7
--- /dev/null
+++ b/frontend/src/context/SearchContext.jsx
@@ -0,0 +1,32 @@
+import React, { useContext , useState} from "react"
+
+const  SearchContext  = React.createContext(undefined)
+
+export const SearchContextProvider = ({children}) =>{
+    const [language, setLanguage] = useState(()=>sessionStorage.getItem("language") || "")
+    const [price, setPrice] = useState(()=>sessionStorage.getItem("price") || "")
+    const [duration, setDuration] = useState(()=>sessionStorage.getItem("duration") || "")
+
+    const saveSearchValues = (language, price, duration)=>{
+        setLanguage(language)
+        setPrice(price)
+        setDuration(duration)
+       
+
+        sessionStorage.setItem("language", language);
+        sessionStorage.setItem("price", price);
+        sessionStorage.setItem("duration", duration);
+       
+    }
+    return(
+        <SearchContext.Provider value={{language, price , duration, saveSearchValues }}>
+            {children}
+        </SearchContext.Provider>
+    ) 
+    
+}
+export const useSearchContext = ()=>{
+   const context =  useContext(SearchContext)
+   return context
+}
+
diff --git a/frontend/src/main.jsx b/frontend/src/main.jsx
index 386c029..06c1011 100644
--- a/frontend/src/main.jsx
+++ b/frontend/src/main.jsx
@@ -1,34 +1,33 @@
-import React from 'react'
-import ReactDOM from 'react-dom/client'
-import App from './App.jsx'
-import './index.css'
-import { Auth0Provider } from '@auth0/auth0-react';
-import {QueryClient, QueryClientProvider } from 'react-query'
-import * as apiClient from "./apiClient.js"
-import { useMutation, useQueryClient} from "react-query"
+import React from "react";
+import ReactDOM from "react-dom/client";
+import App from "./App.jsx";
+import "./index.css";
+import { Auth0Provider } from "@auth0/auth0-react";
+import { QueryClient, QueryClientProvider } from "react-query";
+import * as apiClient from "./apiClient.js";
+import { useMutation, useQueryClient } from "react-query";
+import { SearchContextProvider } from "./context/SearchContext.jsx";
 
 const queryClient = new QueryClient({
-  defaultOptions : {
-    queries:{
-      retry : 0,
-    }
-  }
-})
+  defaultOptions: {
+    queries: {
+      retry: 0,
+    },
+  },
+});
 
-
-ReactDOM.createRoot(document.getElementById('root')).render(
-  
-   <QueryClientProvider client = {queryClient}>
-  <Auth0Provider
-    domain="dev-rzg0uho30sdg4ypr.us.auth0.com"
-    clientId="cp2Ftkv3iYymRtxkmRgpc4DHYNsXZ9nd"
-    authorizationParams={{
-      redirect_uri: window.location.origin
-    }}
-    
-  >
-    <App />
-    </Auth0Provider>
-    </QueryClientProvider>
-  
-)
+ReactDOM.createRoot(document.getElementById("root")).render(
+  <QueryClientProvider client={queryClient}>
+    <SearchContextProvider>
+      <Auth0Provider
+        domain="dev-rzg0uho30sdg4ypr.us.auth0.com"
+        clientId="cp2Ftkv3iYymRtxkmRgpc4DHYNsXZ9nd"
+        authorizationParams={{
+          redirect_uri: window.location.origin,
+        }}
+      >
+        <App />
+      </Auth0Provider>
+    </SearchContextProvider>
+  </QueryClientProvider>
+);
diff --git a/frontend/src/pages/Home.jsx b/frontend/src/pages/Home.jsx
index 684926c..88e6404 100644
--- a/frontend/src/pages/Home.jsx
+++ b/frontend/src/pages/Home.jsx
@@ -1,189 +1,172 @@
-import React, { useEffect, useState } from 'react';
-import Header from '../components/Header';
+import React, { useEffect, useState } from "react";
+import Header from "../components/Header";
 import { useAuth0 } from "@auth0/auth0-react";
-import { useMutation , useQuery} from 'react-query';
-import * as apiClient from "../apiClient.js"
-import Select from 'react-select';
-import Range from 'rc-slider/lib/Slider';
-import 'rc-slider/assets/index.css';
-import TutorCard from '../components/TutorCard.jsx';
+import { useMutation, useQuery } from "react-query";
+import * as apiClient from "../apiClient.js";
 
+import "rc-slider/assets/index.css";
+import TutorCard from "../components/TutorCard.jsx";
+import SearchBar from "../components/SearchBar.jsx";
 
 const Home = () => {
-    const { user, isAuthenticated } = useAuth0();
-
-    const mutation = useMutation(apiClient.auth);
-
-    useEffect(() => {
-          const helper= async()=>{
-            if (isAuthenticated) {
-              try {
-                  console.log(user)
-                 mutation.mutate({auth0Id : user.sub, email : user.email, name:user.name, picture : user.picture});
-                  
-              } catch (error) {
-                  console.error("Error:", error);
-              }
-          }
-     
-
-          }
-          helper()
-          
-       
-           
-
-        
-    }, [isAuthenticated, user]);
-
-    const {data : tutors,isLoading, isError} = useQuery("fetchTutors", async()=> await apiClient.fetchTutors())
-    console.log(tutors)
+  const { user, isAuthenticated } = useAuth0();
+
+  const mutation = useMutation(apiClient.auth);
+
+  useEffect(() => {
+    const helper = async () => {
+      if (isAuthenticated) {
+        try {
+          console.log(user);
+          mutation.mutate({
+            auth0Id: user.sub,
+            email: user.email,
+            name: user.name,
+            picture: user.picture,
+          });
+        } catch (error) {
+          console.error("Error:", error);
+        }
+      }
+    };
+    helper();
+  }, [isAuthenticated, user]);
+
+  const {
+    data: tutors,
+    isLoading,
+    isError,
+  } = useQuery("fetchTutors", async () => await apiClient.fetchTutors());
+  console.log(tutors);
   //   if (isLoading) return <div>Loading...</div>;
   // if (isError) return <div>Error fetching data</div>;
-  
-
   const options = [
-    { value: 'English', label: 'English' },
-    { value: 'German', label: 'German' },
-    { value: 'Russian', label: 'Russian' },
-    { value: 'Korean', label: 'Korean' },
-    { value: 'Japanese', label: 'Japanese' },
-    { value: 'Spanish', label: 'Spanish' },
-    { value: 'French', label: 'French' },
-   
+    { value: "English", label: "English" },
+    { value: "German", label: "German" },
+    { value: "Russian", label: "Russian" },
+    { value: "Korean", label: "Korean" },
+    { value: "Japanese", label: "Japanese" },
+    { value: "Spanish", label: "Spanish" },
+    { value: "French", label: "French" },
   ];
 
+  const Priceoptions = [
+    { value: 'below_2000', label: 'Below 2000' },
+    { value: '2000_5000', label: '2000 - 5000' },
+    { value: '5000_10000', label: '5000 - 10000' },
+    { value: '10000_above', label: '10000 and above' },
+  ];
+  const Durationoptions = [
+    { value: 'below_4', label: 'less than 4 weeks' },
+    { value: '4_6', label: '4 - 6 weeks' },
+    { value: '6_above', label: 'more than 6 weeks' },
+  ];
   
+
+
   const [selectedOption, setSelectedOption] = useState(null);
+  const [selectedPrice, setSelectedPrice] = useState(null);
+  const [selectedDuration, setSelectedDuration] = useState(null);
+
 
-  
-  const handleSelectChange = (selectedOption) => {
 
+  const handleSelectChange = (selectedOption) => {
     setSelectedOption(selectedOption);
-    console.log(selectedOption)
+    console.log(selectedOption);
   };
-  const customStyles = {
-        control: (provided) => ({
-          ...provided,
-          borderRadius: '0.375rem', 
-          borderColor: '#004250',
-          '&:hover':{
-            borderColor: '#004250',
-          }, 
-          boxShadow: 'none',
-          backgroundColor:'black',
-        //   paddingLeft:'20px',
-        //   paddingRight:'20px',
-          gap:"100px",
-          color:'white',
-          fontWeight: '',
-          fontSize:'1.2rem',
-          display:'flex',
-          justifyContent: 'space-between'
-          
-
-        }),
-        menu: (provided) => ({
-          ...provided,
-          
-          marginTop: '0.5rem', 
-          borderRadius: '0.375rem', 
-          boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
-          backgroundColor:'',
-          color:'white'
-         
-        }),
-        placeholder: (provided) => ({
-            ...provided,
-            paddingLeft:'2px',
-        //   paddingRight:'20px',
-            color: 'white', 
-        }),
-      singleValue: (provided) => ({
-        ...provided,
-        
-        color: 'white', 
-      }),
-      input: (provided) => ({
-        ...provided,
-        color: 'white', 
-      }),
-  
-        option: (provided) => ({
-          ...provided,
-          backgroundColor: 'black', 
-          color: 'white', 
-          '&:hover': {
-            backgroundColor: 'black',
-          },
-        }),
-      };
-      const [sliderValue, setSliderValue] = useState(50); // Initial value set to 50
-
-      // Function to handle slider change
-      const handleSliderChange = (event) => {
-        setSliderValue(event.target.value);
-      };
-      const [priceRange, setPriceRange] = useState([0, 1000]);
-    const handlePriceRangeChange = (newPriceRange) => {
-        setPriceRange(newPriceRange);
-    };
+  const handleSelectChangePrice = (selectedPrice) => {
 
-    return (
-        <div>
-            <Header />
-            <div className='p-4 text-white text-4xl mt-6 font-bold  '>
-            Online tutors & teachers for private lessons
-            </div>
-            <div className='flex justify-between items-center p-3  text-white mt-3'>
-            <div className=''>
-            <Select 
-            className=' text-white p-3'
-            options={options}
-            value={selectedOption}
-            onChange={handleSelectChange}
-            placeholder="English"
-            isSearchable
-            styles={customStyles}
-           />
-            </div>
-            <div className='flex flex-col gap-3'>
-            <h2>Price Range: {priceRange[0]} rupees - {priceRange[1]} rupees</h2>        
-            <div className=''>
-                <Range
-                       min={0}
-                            max={1000}
-                            value={priceRange}
-                            onChange={setPriceRange}
-                            allowCross={false} // Disable crossing handles
-                            step={1}
-                            marks={{ 0: '0', 1000: '1000' }} // Optional: marks on the slider
-            />
-            </div>
-            </div>
-            
-
-            </div>
-            <div className='flex justify-between' >
-            <div className=' grid grid-cols-1 p-2 gap-20 text-white'>
-            {
-              tutors.map((tutor, index)=>(
-              <TutorCard key={index} tutor={tutor} />
-              ))
+    setSelectedPrice(selectedPrice);
+    console.log(selectedPrice)
+  };
+  const handleSelectChangeDuration = (selectedDuration) => {
 
-            }
+    setSelectedDuration(selectedDuration);
+    console.log(selectedDuration)
+  };
 
-            </div>
-            </div>
-           
+  const customStyles = {
+    control: (provided) => ({
+      ...provided,
+      borderRadius: "0.375rem",
+      borderColor: "#004250",
+      "&:hover": {
+        borderColor: "#004250",
+      },
+      boxShadow: "none",
+      backgroundColor: "black",
+      //   paddingLeft:'20px',
+      //   paddingRight:'20px',
+      gap: "100px",
+      color: "white",
+      fontWeight: "",
+      fontSize: "1.2rem",
+      display: "flex",
+      justifyContent: "space-between",
+    }),
+    menu: (provided) => ({
+      ...provided,
+
+      marginTop: "0.5rem",
+      borderRadius: "0.375rem",
+      boxShadow:
+        "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
+      backgroundColor: "",
+      color: "white",
+    }),
+    placeholder: (provided) => ({
+      ...provided,
+      paddingLeft: "2px",
+      //   paddingRight:'20px',
+      color: "white",
+    }),
+    singleValue: (provided) => ({
+      ...provided,
+
+      color: "white",
+    }),
+    input: (provided) => ({
+      ...provided,
+      color: "white",
+    }),
+
+    option: (provided) => ({
+      ...provided,
+      backgroundColor: "black",
+      color: "white",
+      "&:hover": {
+        backgroundColor: "black",
+      },
+    }),
+  };
+  const [sliderValue, setSliderValue] = useState(50); // Initial value set to 50
+
+ 
+  // const [priceRange, setPriceRange] = useState([0, 1000]);
+  // const handlePriceRangeChange = (newPriceRange) => {
+  //   setPriceRange(newPriceRange);
+  // };
+
+  return (
+    <div>
+      <Header />
+      <div className="p-4 text-white text-4xl mt-6 font-bold  ">
+        Online tutors & teachers for private lessons
+      </div>
+      <SearchBar />
+      <div className="flex justify-between">
+        <div className=" grid grid-cols-1 p-2 gap-20 text-white">
+          {tutors && tutors.length > 0 ? (
+            tutors.map((tutor, index) => (
+              <TutorCard key={index} tutor={tutor} />
+            ))
+          ) : (
+            <div>No tutors available</div>
+          )}
         </div>
-    );
+      </div>
+    </div>
+  );
 };
 
-
 export default Home;
-
-
-
-
-
diff --git a/frontend/src/pages/Search.jsx b/frontend/src/pages/Search.jsx
new file mode 100644
index 0000000..cf6b46c
--- /dev/null
+++ b/frontend/src/pages/Search.jsx
@@ -0,0 +1,11 @@
+import React from 'react'
+
+const Search = () => {
+  return (
+    <div>
+      
+    </div>
+  )
+}
+
+export default Search
-- 
2.41.0.windows.3

