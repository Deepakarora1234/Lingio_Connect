From b479d14fc6b13891929ad31899ec6b7e4e4a0a4d Mon Sep 17 00:00:00 2001
From: Deepak Arora <arroadeepak0817@gmail.com>
Date: Sun, 16 Jun 2024 18:16:46 +0530
Subject: [PATCH 12/16] Video Call

---
 backend/src/Routes/tutorRoutes.js |   4 +-
 backend/src/socket/socket.js      |  69 +++++---
 frontend/package-lock.json        | 273 ++++++++++++++++++++++++++++++
 frontend/package.json             |   1 +
 frontend/src/App.jsx              |   8 +-
 frontend/src/pages/Learning.jsx   |  10 +-
 frontend/src/pages/VideoCall.jsx  | 144 ++++++++++++++++
 7 files changed, 477 insertions(+), 32 deletions(-)
 create mode 100644 frontend/src/pages/VideoCall.jsx

diff --git a/backend/src/Routes/tutorRoutes.js b/backend/src/Routes/tutorRoutes.js
index 6100f31..e572a11 100644
--- a/backend/src/Routes/tutorRoutes.js
+++ b/backend/src/Routes/tutorRoutes.js
@@ -18,12 +18,12 @@ const upload = multer({
     }
 });
 
-router.post("/",upload.single("imageFile"), async(req, res)=>{
+router.post("/", async(req, res)=>{
     try{
         
         // console.log(req)
         console.log(req.body)
-        console.log(req.file)
+        // console.log(req.file)
         const bookingArray= []
         const data = req.body
         // console.log(imageFile)
diff --git a/backend/src/socket/socket.js b/backend/src/socket/socket.js
index 5d5b85c..685c255 100644
--- a/backend/src/socket/socket.js
+++ b/backend/src/socket/socket.js
@@ -1,48 +1,56 @@
-import {Server} from "socket.io"
-import http from "http"
-import express from "express"
-import Conversation from "../models/conversation.js"
-import Message from "../models/message.js"
+import { Server } from "socket.io";
+import http from "http";
+import express from "express";
+import Conversation from "../models/conversation.js";
+import Message from "../models/message.js";
 
-const app = express()
-
-const server = http.createServer(app)
+const app = express();
+const server = http.createServer(app);
 
 const io = new Server(server, {
-    cors:{
-      origin:["http://localhost:5173","http://localhost:5174", "https://lingioconnect-tutor.onrender.com","https://lingio-connect.onrender.com" ],
-      methods:["GET", "POST"]
-
+    cors: {
+        origin: [
+            "http://localhost:5173",
+            "http://localhost:5174",
+            "https://lingioconnect-tutor.onrender.com",
+            "https://lingio-connect.onrender.com"
+        ],
+        methods: ["GET", "POST"]
     }
-})
+});
 
-// const userSocketMap = {}
+const roomCallIds = {}; // Memory storage for callIds
 
 io.on('connection', (socket) => {
-    console.log('a user connected');
+    console.log('A user connected');
 
     socket.on('joinRoom', ({ senderId, receiverId }) => {
         const roomId = [senderId, receiverId].sort().join('-');
+        console.log("roomId is", roomId);
         socket.join(roomId);
+
+        // Send the stored callId to the newly connected client if it exists
+        if (roomCallIds[roomId]) {
+            io.to(roomId).emit('receiveCallId', roomCallIds[roomId]);
+        }
     });
 
     socket.on('sendMessage', async ({ senderId, receiverId, message }) => {
         try {
-            console.log("hello")
             let conversation = await Conversation.findOne({
-                participants: { $all: [senderId, receiverId] },
+                participants: { $all: [senderId, receiverId] }
             });
 
             if (!conversation) {
                 conversation = await Conversation.create({
-                    participants: [senderId, receiverId],
+                    participants: [senderId, receiverId]
                 });
             }
 
             const newMessage = new Message({
                 senderId,
                 receiverId,
-                message,
+                message
             });
 
             if (newMessage) {
@@ -53,18 +61,29 @@ io.on('connection', (socket) => {
 
             const roomId = [senderId, receiverId].sort().join('-');
             io.to(roomId).emit('receiveMessage', newMessage);
-            console.log("sfhbjhdsfbhjdbs")
         } catch (error) {
             console.error(error);
         }
     });
 
-    socket.on('disconnect', () => {
-        console.log('user disconnected');
-    });
-});
+    socket.on('sendCallId', ({ senderId, receiverId, callId }) => {
+        try {
+            console.log(callId + " this is callId");
+            const roomId = [senderId, receiverId].sort().join('-');
+            console.log("roomId is", roomId);
 
+            // Store the callId in memory
+            roomCallIds[roomId] = callId;
 
+            io.to(roomId).emit('receiveCallId', callId);
+        } catch (error) {
+            console.error(error);
+        }
+    });
 
-export  {app, io, server}
+    socket.on('disconnect', () => {
+        console.log('User disconnected');
+    });
+});
 
+export { app, io, server };
diff --git a/frontend/package-lock.json b/frontend/package-lock.json
index a58cf1e..48cbabb 100644
--- a/frontend/package-lock.json
+++ b/frontend/package-lock.json
@@ -13,6 +13,7 @@
         "@emotion/styled": "^11.11.5",
         "@mui/material": "^5.15.15",
         "@mui/styled-engine": "^5.15.14",
+        "@stream-io/video-react-sdk": "^1.2.2",
         "@stripe/react-stripe-js": "^2.7.1",
         "@stripe/stripe-js": "^3.4.0",
         "autoprefixer": "^10.4.19",
@@ -1704,6 +1705,11 @@
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@kurkle/color": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.2.tgz",
+      "integrity": "sha512-fuscdXJ9G1qb7W8VdHi+IwRqij3lBkosAm4ydQtEmbY58OzHXqQhvlxqEkoz0yssNVn38bcpRWgA9PP+OGoisw=="
+    },
     "node_modules/@mui/base": {
       "version": "5.0.0-beta.40",
       "resolved": "https://registry.npmjs.org/@mui/base/-/base-5.0.0-beta.40.tgz",
@@ -1988,6 +1994,28 @@
         "url": "https://opencollective.com/popperjs"
       }
     },
+    "node_modules/@protobuf-ts/runtime": {
+      "version": "2.9.4",
+      "resolved": "https://registry.npmjs.org/@protobuf-ts/runtime/-/runtime-2.9.4.tgz",
+      "integrity": "sha512-vHRFWtJJB/SiogWDF0ypoKfRIZ41Kq+G9cEFj6Qm1eQaAhJ1LDFvgZ7Ja4tb3iLOQhz0PaoPnnOijF1qmEqTxg=="
+    },
+    "node_modules/@protobuf-ts/runtime-rpc": {
+      "version": "2.9.4",
+      "resolved": "https://registry.npmjs.org/@protobuf-ts/runtime-rpc/-/runtime-rpc-2.9.4.tgz",
+      "integrity": "sha512-y9L9JgnZxXFqH5vD4d7j9duWvIJ7AShyBRoNKJGhu9Q27qIbchfzli66H9RvrQNIFk5ER7z1Twe059WZGqERcA==",
+      "dependencies": {
+        "@protobuf-ts/runtime": "^2.9.4"
+      }
+    },
+    "node_modules/@protobuf-ts/twirp-transport": {
+      "version": "2.9.4",
+      "resolved": "https://registry.npmjs.org/@protobuf-ts/twirp-transport/-/twirp-transport-2.9.4.tgz",
+      "integrity": "sha512-hoLHHVn1GgLyRVxDW9f0QKG24u/T/hLC0D97cV18OLyeC6Ibsvfg6xSSgA9Q/9wtBPI9ntMU/5/XLpICUXDgDQ==",
+      "dependencies": {
+        "@protobuf-ts/runtime": "^2.9.4",
+        "@protobuf-ts/runtime-rpc": "^2.9.4"
+      }
+    },
     "node_modules/@protobufjs/aspromise": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
@@ -2250,6 +2278,109 @@
       "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
       "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA=="
     },
+    "node_modules/@stream-io/video-client": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/@stream-io/video-client/-/video-client-1.3.1.tgz",
+      "integrity": "sha512-L9OYc+zH2Eu+mnVnUJkSZKI5uJvegASDrEPEND9ztOy9St4cw6xeuJlTjsouY9BxHCA9gsJBHvHG2HLQ5S3fjA==",
+      "dependencies": {
+        "@protobuf-ts/runtime": "^2.9.4",
+        "@protobuf-ts/runtime-rpc": "^2.9.4",
+        "@protobuf-ts/twirp-transport": "^2.9.4",
+        "@types/ws": "^8.5.7",
+        "axios": "^1.6.0",
+        "base64-js": "^1.5.1",
+        "isomorphic-ws": "^5.0.0",
+        "rxjs": "~7.8.1",
+        "sdp-transform": "^2.14.1",
+        "ua-parser-js": "^1.0.36",
+        "webrtc-adapter": "^8.2.3",
+        "ws": "^8.14.2"
+      }
+    },
+    "node_modules/@stream-io/video-client/node_modules/ws": {
+      "version": "8.17.0",
+      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.0.tgz",
+      "integrity": "sha512-uJq6108EgZMAl20KagGkzCKfMEjxmKvZHG7Tlq0Z6nOky7YF7aq4mOx6xK8TJ/i1LeK4Qus7INktacctDgY8Ow==",
+      "engines": {
+        "node": ">=10.0.0"
+      },
+      "peerDependencies": {
+        "bufferutil": "^4.0.1",
+        "utf-8-validate": ">=5.0.2"
+      },
+      "peerDependenciesMeta": {
+        "bufferutil": {
+          "optional": true
+        },
+        "utf-8-validate": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@stream-io/video-filters-web": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/@stream-io/video-filters-web/-/video-filters-web-0.1.2.tgz",
+      "integrity": "sha512-AMooqjbhdX8+T1l0X5pgPnDASarkAcTpXDPkZbKMDiw47CJxf6i3wJKLkFiyPTz9ry8VWxaP5peeiLm3trtC0Q==",
+      "dependencies": {
+        "wasm-feature-detect": "^1.6.1"
+      }
+    },
+    "node_modules/@stream-io/video-react-bindings": {
+      "version": "0.4.43",
+      "resolved": "https://registry.npmjs.org/@stream-io/video-react-bindings/-/video-react-bindings-0.4.43.tgz",
+      "integrity": "sha512-g9t1D7mjTdQN4fUr1+BqCSTJJE5QICjKXO+EKVQwiCp04SpU1LIoNhDwcxpjCUfYK1Xz50E5ZFDkxl18wUdGsw==",
+      "dependencies": {
+        "i18next": "^23.5.1",
+        "rxjs": "~7.8.1"
+      },
+      "peerDependencies": {
+        "@stream-io/video-client": "^1.3.1",
+        "react": "^17 || ^18 || ^19"
+      }
+    },
+    "node_modules/@stream-io/video-react-sdk": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/@stream-io/video-react-sdk/-/video-react-sdk-1.2.2.tgz",
+      "integrity": "sha512-rXvwyx+5YFMCXFYGdBrlKDkpRMap7jK9T6DoEaueHUI19ZkhFUms7ZyazzR9f7IxdGzfe3LSIlijtgtRNhrfSA==",
+      "dependencies": {
+        "@floating-ui/react": "^0.26.5",
+        "@stream-io/video-client": "1.3.1",
+        "@stream-io/video-filters-web": "0.1.2",
+        "@stream-io/video-react-bindings": "0.4.43",
+        "chart.js": "^4.4.1",
+        "clsx": "^2.0.0",
+        "react-chartjs-2": "^5.2.0"
+      },
+      "peerDependencies": {
+        "react": "^18 || ^19"
+      }
+    },
+    "node_modules/@stream-io/video-react-sdk/node_modules/@floating-ui/react": {
+      "version": "0.26.17",
+      "resolved": "https://registry.npmjs.org/@floating-ui/react/-/react-0.26.17.tgz",
+      "integrity": "sha512-ESD+jYWwqwVzaIgIhExrArdsCL1rOAzryG/Sjlu8yaD3Mtqi3uVyhbE2V7jD58Mo52qbzKz2eUY/Xgh5I86FCQ==",
+      "dependencies": {
+        "@floating-ui/react-dom": "^2.1.0",
+        "@floating-ui/utils": "^0.2.0",
+        "tabbable": "^6.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
+      }
+    },
+    "node_modules/@stream-io/video-react-sdk/node_modules/@floating-ui/react/node_modules/@floating-ui/react-dom": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.0.tgz",
+      "integrity": "sha512-lNzj5EQmEKn5FFKc04+zasr09h/uX8RtJRNj5gUXsSQIXHVWTVh+hVAg1vOMCexkX8EgvemMvIFpQfkosnVNyA==",
+      "dependencies": {
+        "@floating-ui/dom": "^1.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
+      }
+    },
     "node_modules/@stripe/react-stripe-js": {
       "version": "2.7.1",
       "resolved": "https://registry.npmjs.org/@stripe/react-stripe-js/-/react-stripe-js-2.7.1.tgz",
@@ -2362,6 +2493,14 @@
         "@types/react": "*"
       }
     },
+    "node_modules/@types/ws": {
+      "version": "8.5.10",
+      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.5.10.tgz",
+      "integrity": "sha512-vmQSUcfalpIq0R9q7uTo2lXs6eGIpt9wtnLdMv9LVpIjCA/+ufZRozlVoVelIYixx1ugCBKDhn89vnsEGOCx9A==",
+      "dependencies": {
+        "@types/node": "*"
+      }
+    },
     "node_modules/@ungap/structured-clone": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz",
@@ -2714,6 +2853,25 @@
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
     },
+    "node_modules/base64-js": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
+      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
     "node_modules/big-integer": {
       "version": "1.6.52",
       "resolved": "https://registry.npmjs.org/big-integer/-/big-integer-1.6.52.tgz",
@@ -2869,6 +3027,17 @@
         "node": ">=4"
       }
     },
+    "node_modules/chart.js": {
+      "version": "4.4.3",
+      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.4.3.tgz",
+      "integrity": "sha512-qK1gkGSRYcJzqrrzdR6a+I0vQ4/R+SoODXyAjscQ/4mzuNzySaMCd+hyVxitSY1+L2fjPD1Gbn+ibNqRmwQeLw==",
+      "dependencies": {
+        "@kurkle/color": "^0.3.0"
+      },
+      "engines": {
+        "pnpm": ">=8"
+      }
+    },
     "node_modules/chokidar": {
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
@@ -4401,6 +4570,28 @@
       "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.8.tgz",
       "integrity": "sha512-SGeBX54F94Wgu5RH3X5jsDtf4eHyRogWX1XGT3b4HuW3tQPM4AaBzoUji/4AAJNXCEOWZ5O0DgZmJw1947gD5Q=="
     },
+    "node_modules/i18next": {
+      "version": "23.11.5",
+      "resolved": "https://registry.npmjs.org/i18next/-/i18next-23.11.5.tgz",
+      "integrity": "sha512-41pvpVbW9rhZPk5xjCX2TPJi2861LEig/YRhUkY+1FQ2IQPS0bKUDYnEqY8XPPbB48h1uIwLnP9iiEfuSl20CA==",
+      "funding": [
+        {
+          "type": "individual",
+          "url": "https://locize.com"
+        },
+        {
+          "type": "individual",
+          "url": "https://locize.com/i18next.html"
+        },
+        {
+          "type": "individual",
+          "url": "https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project"
+        }
+      ],
+      "dependencies": {
+        "@babel/runtime": "^7.23.2"
+      }
+    },
     "node_modules/idb": {
       "version": "7.1.1",
       "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
@@ -4849,6 +5040,14 @@
       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
       "dev": true
     },
+    "node_modules/isomorphic-ws": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/isomorphic-ws/-/isomorphic-ws-5.0.0.tgz",
+      "integrity": "sha512-muId7Zzn9ywDsyXgTIafTry2sV3nySZeUDe6YedVd1Hvuuep5AsIlqK+XefWpYTyJG5e503F2xIuT2lcU6rCSw==",
+      "peerDependencies": {
+        "ws": "*"
+      }
+    },
     "node_modules/iterator.prototype": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.2.tgz",
@@ -5854,6 +6053,15 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/react-chartjs-2": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-5.2.0.tgz",
+      "integrity": "sha512-98iN5aguJyVSxp5U3CblRLH67J8gkfyGNbiK3c+l1QI/G4irHMPQw44aEPmjVag+YKTyQ260NcF82GTQ3bdscA==",
+      "peerDependencies": {
+        "chart.js": "^4.1.1",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
+      }
+    },
     "node_modules/react-dom": {
       "version": "18.2.0",
       "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz",
@@ -6270,6 +6478,14 @@
         "queue-microtask": "^1.2.2"
       }
     },
+    "node_modules/rxjs": {
+      "version": "7.8.1",
+      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-7.8.1.tgz",
+      "integrity": "sha512-AA3TVj+0A2iuIoQkWEK/tqFjBq2j+6PO6Y0zJcvzLAFhEFIO3HL0vls9hWLncZbAAbK0mar7oZ4V079I/qPMxg==",
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/safe-array-concat": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz",
@@ -6332,6 +6548,19 @@
         "loose-envify": "^1.1.0"
       }
     },
+    "node_modules/sdp": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/sdp/-/sdp-3.2.0.tgz",
+      "integrity": "sha512-d7wDPgDV3DDiqulJjKiV2865wKsJ34YI+NDREbm+FySq6WuKOikwyNQcm+doLAZ1O6ltdO0SeKle2xMpN3Brgw=="
+    },
+    "node_modules/sdp-transform": {
+      "version": "2.14.2",
+      "resolved": "https://registry.npmjs.org/sdp-transform/-/sdp-transform-2.14.2.tgz",
+      "integrity": "sha512-icY6jVao7MfKCieyo1AyxFYm1baiM+fA00qW/KrNNVlkxHAd34riEKuEkUe4bBb3gJwLJZM+xT60Yj1QL8rHiA==",
+      "bin": {
+        "sdp-verify": "checker.js"
+      }
+    },
     "node_modules/semver": {
       "version": "6.3.1",
       "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
@@ -6737,6 +6966,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/tabbable": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/tabbable/-/tabbable-6.2.0.tgz",
+      "integrity": "sha512-Cat63mxsVJlzYvN51JmVXIgNoUokrIaT2zLclCXjRd8boZ0004U4KCs/sToJ75C6sdlByWxpYnb5Boif1VSFew=="
+    },
     "node_modules/tailwindcss": {
       "version": "3.4.3",
       "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.3.tgz",
@@ -6959,6 +7193,28 @@
         "react-dom": "^17.x || ^18.x"
       }
     },
+    "node_modules/ua-parser-js": {
+      "version": "1.0.38",
+      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-1.0.38.tgz",
+      "integrity": "sha512-Aq5ppTOfvrCMgAPneW1HfWj66Xi7XL+/mIy996R1/CLS/rcyJQm6QZdsKrUeivDFQ+Oc9Wyuwor8Ze8peEoUoQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/ua-parser-js"
+        },
+        {
+          "type": "paypal",
+          "url": "https://paypal.me/faisalman"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/faisalman"
+        }
+      ],
+      "engines": {
+        "node": "*"
+      }
+    },
     "node_modules/unbox-primitive": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
@@ -7111,6 +7367,23 @@
         }
       }
     },
+    "node_modules/wasm-feature-detect": {
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/wasm-feature-detect/-/wasm-feature-detect-1.6.1.tgz",
+      "integrity": "sha512-R1i9ED8UlLu/foILNB1ck9XS63vdtqU/tP1MCugVekETp/ySCrBZRk5I/zI67cI1wlQYeSonNm1PLjDHZDNg6g=="
+    },
+    "node_modules/webrtc-adapter": {
+      "version": "8.2.3",
+      "resolved": "https://registry.npmjs.org/webrtc-adapter/-/webrtc-adapter-8.2.3.tgz",
+      "integrity": "sha512-gnmRz++suzmvxtp3ehQts6s2JtAGPuDPjA1F3a9ckNpG1kYdYuHWYpazoAnL9FS5/B21tKlhkorbdCXat0+4xQ==",
+      "dependencies": {
+        "sdp": "^3.2.0"
+      },
+      "engines": {
+        "node": ">=6.0.0",
+        "npm": ">=3.10.0"
+      }
+    },
     "node_modules/websocket-driver": {
       "version": "0.7.4",
       "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
diff --git a/frontend/package.json b/frontend/package.json
index 38a4c74..7956a12 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -15,6 +15,7 @@
     "@emotion/styled": "^11.11.5",
     "@mui/material": "^5.15.15",
     "@mui/styled-engine": "^5.15.14",
+    "@stream-io/video-react-sdk": "^1.2.2",
     "@stripe/react-stripe-js": "^2.7.1",
     "@stripe/stripe-js": "^3.4.0",
     "autoprefixer": "^10.4.19",
diff --git a/frontend/src/App.jsx b/frontend/src/App.jsx
index 2b816e2..3b20c33 100644
--- a/frontend/src/App.jsx
+++ b/frontend/src/App.jsx
@@ -16,6 +16,7 @@ import { Elements } from '@stripe/react-stripe-js'
 import { useAppContext } from './context/AppContext'
 import MyTutors from './pages/MyTutors'
 import Learning from './pages/Learning'
+import VideoCall from './pages/VideoCall'
 
 
 function App() {
@@ -33,11 +34,12 @@ function App() {
        <Route path='/learning/:id' element= {<Learning />} />
        <Route path='/my-tutors' element= {<MyTutors />} />
        <Route path='/details/:id' element= {<Details />} />
-       <Route path='/booking/:id' element= {
+       <Route path='/booking/:id' element= { <Booking /> } />
+       <Route path='/videoCall/:tutorId/:studentId/:studentName' element= { <VideoCall /> } />
        
-       <Booking />
+      
      
-       } />
+      
        <Route path='/home' element={!isAuthenticated ? <Welcome /> : <Home />} />
      
       </Routes>
diff --git a/frontend/src/pages/Learning.jsx b/frontend/src/pages/Learning.jsx
index b4a1207..e9b9f4a 100644
--- a/frontend/src/pages/Learning.jsx
+++ b/frontend/src/pages/Learning.jsx
@@ -26,14 +26,20 @@ const Learning = () => {
     });
 
     const userId = currentUser?._id;
+    const studentName = currentUser?.name
 
     const mutation = useMutation(({ id, userId, message }) => apiClient.sendMessage(id, userId, message));
     
     const [socket, setSocket] = useState(null);
+    const  [callId, setCallId] = useState("")
 
     useEffect(() => {
         const newSocket = io('https://lingio-connect.onrender.com'); 
         setSocket(newSocket);
+        newSocket.on('receiveCallId', (callId)=>{
+            setCallId(callId)
+
+        })
         return () => newSocket.close();
     }, []);
 
@@ -101,8 +107,8 @@ const Learning = () => {
                                 </div>
                             </div>
                         </div>
-                        <Link className='flex mt-5 justify-center py-2 font-bold px-5 m-1 rounded-lg text-2xl items-center bg-cyan-950 hover:bg-cyan-800 text-white border'>
-                            Join Here
+                        <Link to={`/videoCall/${id}/${userId}/${studentName}`} className='flex mt-5 justify-center py-2 font-bold px-5 m-1 rounded-lg text-2xl items-center bg-cyan-950 hover:bg-cyan-800 text-white border'>
+                            Join Live Session
                         </Link>
                     </div>
                     <form onSubmit={handleSubmit} className='border border-orange-200 flex flex-col p-3'>
diff --git a/frontend/src/pages/VideoCall.jsx b/frontend/src/pages/VideoCall.jsx
new file mode 100644
index 0000000..dec3362
--- /dev/null
+++ b/frontend/src/pages/VideoCall.jsx
@@ -0,0 +1,144 @@
+import React, { useState, useEffect } from 'react';
+import { useParams, useNavigate } from 'react-router-dom';
+import io from 'socket.io-client';
+import {
+    CallingState,
+    StreamCall,
+    SpeakerLayout,
+    CallControls,
+    StreamVideo,
+    StreamTheme,
+    StreamVideoClient,
+    useCall,
+    useCallStateHooks,
+    ParticipantView,
+  } from '@stream-io/video-react-sdk';
+  import '@stream-io/video-react-sdk/dist/css/styles.css';
+
+const VideoCall = () => {
+    const navigate = useNavigate();
+    const { tutorId, studentId, studentName } = useParams();
+
+    const [socket, setSocket] = useState(null);
+    const [callId, setCallId] = useState("");
+
+    const apiKey = 'mmhfdzb5evj2'; 
+    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiUGFkbV9fQW1pZGFsYSIsImlzcyI6Imh0dHBzOi8vcHJvbnRvLmdldHN0cmVhbS5pbyIsInN1YiI6InVzZXIvUGFkbV9fQW1pZGFsYSIsImlhdCI6MTcxODM1MzczOSwiZXhwIjoxNzE4OTU4NTQ0fQ.rxXt4khjVNHlhASsVCiqcWDpCphlJXAJq-bVFQGBBZI'; // the token can be found in the "Credentials" section
+    const userId = 'Padm__Amidala'; 
+    useEffect(() => {
+        const newSocket = io('https://lingio-connect.onrender.com');
+        setSocket(newSocket);
+        console.log("Socket connection initialized");
+
+        newSocket.on('connect', () => {
+            console.log(`Socket connected with id: ${newSocket.id}`);
+            newSocket.emit('joinRoom', { senderId: studentId, receiverId: tutorId });
+        });
+
+        newSocket.on('receiveCallId', (receivedCallId) => {
+            console.log(`Received callId: ${receivedCallId}`);
+            setCallId(receivedCallId);
+        });
+
+        newSocket.on('disconnect', () => {
+            console.log('Socket disconnected');
+        });
+
+        newSocket.on('error', (error) => {
+            console.error(`Socket error: ${error}`);
+        });
+
+        return () => {
+            newSocket.close();
+            console.log("Socket disconnected on cleanup");
+        };
+    }, [studentId, tutorId]);
+
+    useEffect(() => {
+        console.log(`Current callId state: ${callId}`);
+    }, [callId]);
+
+    const user = {
+        id: userId,
+        name: studentName,
+        image: 'https://getstream.io/random_svg/?id=oliver&name=Oliver',
+      };
+    
+      const client = new StreamVideoClient({ apiKey, user, token });
+      const call = client.call('default', callId);
+
+    useEffect(() => {
+        const joinCall = async () => {
+          await call.join({ create: true });
+        };
+        joinCall();
+    
+        return () => {
+          call.leave();
+        };
+      }, [call]);
+
+    return (
+        <div>
+        <StreamVideo client={client}>
+          <StreamCall call={call}>
+            <MyUILayout navigate={navigate} tutorId={tutorId} studentId={studentId} />
+          </StreamCall>
+        </StreamVideo>
+      </div>
+    );
+};
+
+export default VideoCall;
+
+
+export const MyUILayout = ({ navigate, tutorId, studentId }) => {
+    const call = useCall();
+    const { useCallCallingState, useParticipantCount } = useCallStateHooks();
+  
+    const callingState = useCallCallingState();
+    const participantCount = useParticipantCount();
+  
+  
+  
+    if (callingState !== CallingState.JOINED) {
+      return <div>Loading...</div>;
+    }
+  
+    return (
+      <StreamTheme>
+        <SpeakerLayout participantsBarPosition="bottom" />
+        <CallControls onLeave={()=> navigate(`/learning/${tutorId}`)} />
+      </StreamTheme>
+    );
+  };
+  
+  export const MyParticipantList = (props) => {
+    const { participants } = props;
+    return (
+      <div style={{ display: 'flex', flexDirection: 'row', gap: '8px' }}>
+        {participants.map((participant) => (
+          <ParticipantView participant={participant} key={participant.sessionId} />
+        ))}
+      </div>
+    );
+  };
+  
+  export const MyFloatingLocalParticipant = (props) => {
+    const { participant } = props;
+    return (
+      <div
+        style={{
+          position: 'absolute',
+          top: '15px',
+          left: '15px',
+          width: '240px',
+          height: '135px',
+          boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 10px 3px',
+          borderRadius: '12px',
+        }}
+      >
+        <ParticipantView participant={participant} />
+      </div>
+    );
+  };
-- 
2.41.0.windows.3

